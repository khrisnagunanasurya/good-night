# syntax=docker/dockerfile:1

# Use a single stage for development (no multi-stage builds)
ARG RUBY_VERSION=3.3.3
FROM docker.io/library/ruby:$RUBY_VERSION

# We don't use the -slim variant in development to include more tools.
# Install ALL dependencies (development, test, etc.)

WORKDIR /rails

# Install system dependencies (including development tools)
RUN apt-get update -qq && \
    apt-get install --no-install-recommends -y \
    build-essential \
    curl \
    git \
    libjemalloc-dev \
    libvips \
    nodejs \
    pkg-config \
    postgresql-client \
    sqlite3 \
    yarn \
    && rm -rf /var/lib/apt/lists /var/cache/apt/archives

# Install gems (including development and test groups)
COPY Gemfile Gemfile.lock ./
RUN bundle config set --local without 'production' && \
    bundle install

# Copy the application code
COPY . .

#  Precompile.  This speeds up initial boot.  Subsequent changes are fast due to volume mounting.
RUN bundle exec bootsnap precompile app/ lib/

# Expose the port for the Rails server
EXPOSE 3000

# Start the Rails server in development mode, binding to all interfaces
#  The -b 0.0.0.0 is crucial for Docker.
CMD ["bundle", "exec", "rails", "server", "-b", "0.0.0.0"]
